# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models

# Create your models here.
class Cluster(models.Model):
    id = models.AutoField(primary_key=True)
    clustername = models.CharField(max_length=100, unique=True)
    create_time = models.DateTimeField(null=True)
    public_network = models.CharField(max_length=100, null=True)
    cluster_network = models.CharField(max_length=100, null=True)
    objectstore = models.CharField(max_length=20, null=True)
    journal_size = models.IntegerField(null=True)
    osdhosts = models.CharField(max_length=100, null=True)
    clients = models.CharField(max_length=100, null=True)
    mons = models.CharField(max_length=100, null=True)
    status = models.CharField(max_length=200, null=True)
    health = models.CharField(max_length=200, null=True)

class diskInfo(models.Model):
    id = models.AutoField(primary_key=True)
    clusterid = models.ForeignKey("Cluster",to_field='id')
    osdhost = models.CharField(max_length=100, null=True)
    osddisk = models.CharField(max_length=100, null=True)
    journaldisk = models.CharField(max_length=100, null=True)

class DefaultCephConfig(models.Model):
    id = models.AutoField(primary_key=True)
    clusterid = models.ForeignKey("Cluster",to_field='id')
    node = models.CharField(max_length=20, null=True)
    osd  = models.CharField(max_length=20, null=True)
    total = models.TextField(null=True)
    max_open_files = models.CharField(max_length=20, null=True)
    filestore_expected_throughput_bytes = models.BigIntegerField(null=True)
    filestore_expected_throughput_ops = models.CharField(max_length=20, null=True)
    filestore_max_sync_interval = models.CharField(max_length=20, null=True)
    filestore_min_sync_interval = models.CharField(max_length=20, null=True)
    filestore_queue_max_bytes = models.BigIntegerField(null=True)
    filestore_queue_max_ops = models.CharField(max_length=20, null=True)
    filestore_queue_high_delay_multiple = models.CharField(max_length=20, null=True)
    filestore_queue_max_delay_multiple = models.CharField(max_length=20, null=True)
    filestore_ondisk_finisher_threads = models.CharField(max_length=20, null=True)
    filestore_apply_finisher_threads = models.CharField(max_length=20, null=True)
    filestore_commit_timeout = models.CharField(max_length=20, null=True)
    filestore_fd_cache_shards = models.CharField(max_length=20, null=True)
    filestore_fd_cache_size = models.CharField(max_length=20, null=True)
    filestore_wbthrottle_enable = models.CharField(max_length=20, null=True)
    filestore_op_threads = models.CharField(max_length=20, null=True)
    filestore_op_thread_timeout = models.CharField(max_length=20, null=True)
    filestore_op_thread_suicide_timeout = models.CharField(max_length=20, null=True)
    osd_journal_size = models.CharField(max_length=20, null=True)
    journal_max_write_bytes = models.BigIntegerField(null=True)
    journal_max_write_entries = models.CharField(max_length=20, null=True)
    journal_throttle_high_multiple = models.CharField(max_length=20, null=True)
    journal_throttle_max_multiple = models.CharField(max_length=20, null=True)
    rbd_cache = models.CharField(max_length=20, null=True)
    rbd_cache_size = models.CharField(max_length=20, null=True)
    rbd_cache_target_dirty = models.CharField(max_length=20, null=True)
    rbd_cache_max_dirty = models.CharField(max_length=20, null=True)
    rbd_cache_max_dirty_age = models.CharField(max_length=20, null=True)
    rbd_cache_writethrough_until_flush = models.CharField(max_length=20, null=True)
    osd_max_write_size = models.CharField(max_length=20, null=True)
    osd_num_op_tracker_shard = models.CharField(max_length=20, null=True)
    osd_client_message_size_cap = models.CharField(max_length=20, null=True)
    osd_client_message_cap = models.CharField(max_length=20, null=True)
    osd_deep_scrub_stride = models.CharField(max_length=20, null=True)
    osd_op_num_threads_per_shard = models.CharField(max_length=20, null=True)
    osd_op_num_shards = models.CharField(max_length=20, null=True)
    osd_op_threads = models.CharField(max_length=20, null=True)
    osd_op_thread_timeout = models.CharField(max_length=20, null=True)
    osd_op_thread_suicide_timeout = models.CharField(max_length=20, null=True)
    osd_recovery_thread_timeout = models.CharField(max_length=20, null=True)
    osd_recovery_thread_suicide_timeout = models.CharField(max_length=20, null=True)
    osd_disk_threads = models.CharField(max_length=20, null=True)
    osd_map_cache_size = models.CharField(max_length=20, null=True)
    osd_recovery_threads = models.CharField(max_length=20, null=True)
    osd_recovery_op_priority = models.CharField(max_length=20, null=True)
    osd_recovery_max_active = models.CharField(max_length=20, null=True)
    osd_max_backfills = models.CharField(max_length=20, null=True)
    osd_scrub_begin_hour = models.CharField(max_length=20, null=True)
    osd_scrub_end_hour = models.CharField(max_length=20, null=True)
    osd_scrub_sleep = models.CharField(max_length=20, null=True)
    osd_scrub_load_threshold = models.CharField(max_length=20, null=True)
    osd_scrub_chunk_max = models.CharField(max_length=20, null=True)
    osd_scrub_chunk_min = models.CharField(max_length=20, null=True)
    osd_objectstore = models.CharField(max_length=20, null=True)
    objecter_inflight_ops = models.CharField(max_length=20, null=True)
    objecter_inflight_op_bytes = models.BigIntegerField(null=True)
